{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/components/account/account.component.html","webpack:///./src/components/account/account.component.ts","webpack:///./src/components/demo/demo.component.html","webpack:///./src/components/demo/demo.component.ts","webpack:///./src/components/home/home.component.html","webpack:///./src/components/home/home.component.ts","webpack:///./src/components/login/login.component.html","webpack:///./src/components/login/login.component.ts","webpack:///./src/components/pci/pci.component.html","webpack:///./src/components/pci/pci.component.ts","webpack:///./src/components/register/register.component.html","webpack:///./src/components/register/register.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts","webpack:///./src/services/test.service.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { Home } from '@components/home/home.component';\nimport { Account } from '@components/account/account.component';\nimport { Login } from '@components/login/login.component';\nimport { Register } from '@components/register/register.component';\nimport { Pci } from '@components/pci/pci.component';\n\n\n\n\n\nconst routes: Routes = [\n  {path: '', redirectTo:'/home', pathMatch: 'full'},\n  {path: 'home', component: Home},\n    {path: 'login', component: Login},\n      {path: 'register', component: Register},\n        {path: 'account', component: Account},\n          {path: 'pci', component: Pci},\n\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'SNC';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { AppRoutingModule } from '@app/app-routing.module';\nimport { HashLocationStrategy, LocationStrategy } from '@angular/common';\nimport { AppComponent } from './app.component';\nimport { Home } from '@components/home/home.component';\nimport { Account } from '@components/account/account.component';\nimport { Login } from '@components/login/login.component';\nimport { Register } from '@components/register/register.component';\nimport { Pci } from '@components/pci/pci.component';\nimport { Demo } from '@components/demo/demo.component';\n\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    Home,\n    Login,\n    Register,\n    Pci,\n    Account,\n    Demo\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n\n  ],\n  providers: [{provide: LocationStrategy, useClass: HashLocationStrategy}],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-12 d-flex ml-auto  justify-content-center\\\">\\n      acccount\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { OnInit } from '@angular/core';\nimport { first } from 'rxjs/operators';\nimport { map } from 'rxjs/operators';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { TestService } from '@services/test.service';\n\n\n\n\n\n\n\n\n//import { LaserCutterService } from '@services/lasercutter.service';\n\n@Component({\n  selector: 'account-root',\n  templateUrl: './account.component.html',\n  providers: [TestService],\n})\n\n\nexport class Account implements OnInit {\n\n  constructor(\n  ) { }\n\n\n  ngOnInit() {\n\n\n\n  }\n\n\n\n}\n","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-12 d-flex ml-auto  justify-content-center\\\">\\n      <div class=\\\" align-items-center\\\">\\n\\n        <div *ngIf=\\\"get == false && create == false; else elseBlock\\\">\\n          <button type=\\\"button\\\" (click)=\\\"createState()\\\" class=\\\"btn-lg btn-outline-primary\\\">Fill Out Form</button>\\n          <button type=\\\"button\\\" (click)=\\\"getState()\\\" class=\\\"btn-lg btn-outline-success\\\">Get Form</button>\\n        </div>\\n\\n        <ng-template #elseBlock>\\n          <button type=\\\"button\\\" (click)=\\\"goBack()\\\" class=\\\"btn-lg btn-outline-primary\\\">Go Back</button>\\n          <div *ngIf=\\\"get == false && create == true\\\">\\n\\n            <form [formGroup]=\\\"skeleForm\\\" layout-align=\\\"center center\\\" class=\\\"card text-center justify-content-center\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n              <h2 class=\\\"card-header  text-center\\\">\\n                Add Patron To Queue\\n              </h2>\\n              <div class=\\\"form-group card-body text-center justify-content-center\\\">\\n\\n                <input type=\\\"text\\\" formControlName=\\\"c73424df44fb900174f5720\\\" placeholder=\\\"What is your name?\\\"  class=\\\"form-control form-control-lg\\\" />\\n                <div *ngIf=\\\"f.c73424df44fb900174f5720.errors\\\" class=\\\"invalid-feedback\\\">\\n                  <div *ngIf=\\\"f.c73424df44fb900174f5720.errors.required\\\">Answer is required</div>\\n                </div>\\n\\n                <input type=\\\"text\\\" formControlName=\\\"c73424df44fb900174f5721\\\" placeholder=\\\"What is today's date?\\\" class=\\\"form-control form-control-lg\\\" />\\n                <div *ngIf=\\\"f.c73424df44fb900174f5721.errors\\\" class=\\\"invalid-feedback\\\">\\n                  <div *ngIf=\\\"f.c73424df44fb900174f5721.errors.required\\\">Answer is required</div>\\n                </div>\\n\\n                <input type=\\\"text\\\" formControlName=\\\"c73424df44fb900174f5722\\\" placeholder=\\\"How are you today?\\\" class=\\\"form-control form-control-lg\\\" />\\n                <div *ngIf=\\\"f.c73424df44fb900174f5722.errors\\\" class=\\\"invalid-feedback\\\">\\n                  <div *ngIf=\\\"f.c73424df44fb900174f5722.errors.required\\\">Answer is required</div>\\n                </div>\\n              </div>\\n\\n              <div class=\\\"form-group\\\">\\n                <button class=\\\"btn btn-primary\\\">Submit Form</button>\\n              </div>\\n            </form>\\n\\n          </div>\\n          <div *ngIf=\\\"get == true && create == false\\\">\\n            <div *ngFor=\\\"let key of keys; let i = index\\\">\\n              <p>\\n                <span><h2>{{i+1}}: </h2><button (click)=\\\"formHandle(key)\\\"> {{key}}</button></span>\\n              </p>\\n            </div>\\n          </div>\\n        </ng-template>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { OnInit } from '@angular/core';\nimport { first } from 'rxjs/operators';\nimport { map } from 'rxjs/operators';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { TestService } from '@services/test.service';\n\n\n\n\n\n\n\n\n//import { LaserCutterService } from '@services/lasercutter.service';\n\n@Component({\n  selector: 'demo-root',\n  templateUrl: './demo.component.html',\n  providers: [TestService],\n})\n\n\nexport class Demo implements OnInit {\n\n  constructor(\n    private router: Router,\n    private formBuilder: FormBuilder,\n    private skeleService: TestService\n    //private home: Home,\n    //private account: Account,\n  ) { }\n\n  create: Boolean = false;\n  get: Boolean = false;\n  skeleForm: FormGroup;\n\n  questions = [\"5c73424df44fb900174f5720\", \"5c73424df44fb900174f5712\", \"5c73424df44fb900174f5722\"];\n\n  ngOnInit() {\n    this.skeleForm = this.formBuilder.group({\n\n      c73424df44fb900174f5720: ['', Validators.required],\n      c73424df44fb900174f5721: ['', Validators.required],\n      c73424df44fb900174f5722: ['', Validators.required]\n    });\n\n\n  }\n  get f() { return this.skeleForm.controls; }\n\n\n  createState() {\n    this.create = true;\n    this.get = false;\n\n  }\n\n  keys: String[];\n  getState() {\n    this.skeleService.getKeys().subscribe(data=>{this.keys = data.Keys,   this.create = false,\n      this.get = true});\n\n\n\n  }\n  goBack() {\n    this.create = false;\n    this.get = false;\n\n  }\n\n  formHandle(key: String){\n    this.skeleService.getForm(key).subscribe(data=>{var newBlob = new Blob([data], { type: \"application/pdf\" });\n\n           var fileURL = URL.createObjectURL(newBlob);\n           console.log(fileURL);\n           window.open(fileURL)});\n  }\n\nfileURL: String;\n\n  onSubmit() {\n      this.skeleService.writePDF({answers: this.skeleForm.value, folder: \"DEMO\", name: \"test\" }).subscribe(data => {\n      this.fileURL= data.msg,\n      console.log(this.fileURL)\n  });\n\n\n\n}\n\n\n\n\n\n\n\n}\n","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-12 d-flex ml-auto  justify-content-center\\\">\\n    home\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { OnInit } from '@angular/core';\nimport { first } from 'rxjs/operators';\nimport { map } from 'rxjs/operators';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { TestService } from '@services/test.service';\n\n\n\n\n\n\n\n\n//import { LaserCutterService } from '@services/lasercutter.service';\n\n@Component({\n  selector: 'home-root',\n  templateUrl: './home.component.html',\n  providers: [TestService],\n})\n\n\nexport class Home implements OnInit {\n\n  constructor(\n\n  ) { }\n\n\n  ngOnInit() {\n\n  }\n\n\n\n\n\n\n\n\n}\n","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-12 d-flex ml-auto  justify-content-center\\\">\\n      login\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { OnInit } from '@angular/core';\nimport { first } from 'rxjs/operators';\nimport { map } from 'rxjs/operators';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { TestService } from '@services/test.service';\n\n\n\n\n\n\n\n\n//import { LaserCutterService } from '@services/lasercutter.service';\n\n@Component({\n  selector: 'login-root',\n  templateUrl: './login.component.html',\n  providers: [TestService],\n})\n\n\nexport class Login implements OnInit {\n\n  constructor(\n  ) { }\n\n \n  ngOnInit() {\n\n\n\n  }\n\n\n\n}\n","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-12 d-flex ml-auto  justify-content-center\\\">\\n      pci\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { OnInit } from '@angular/core';\nimport { first } from 'rxjs/operators';\nimport { map } from 'rxjs/operators';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { TestService } from '@services/test.service';\n\n\n\n\n\n\n\n\n//import { LaserCutterService } from '@services/lasercutter.service';\n\n@Component({\n  selector: 'pci-root',\n  templateUrl: './pci.component.html',\n  providers: [TestService],\n})\n\n\nexport class Pci implements OnInit {\n\n  constructor(\n  ) { }\n\n\n  ngOnInit() {\n\n\n\n  }\n\n\n\n}\n","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-12 d-flex ml-auto  justify-content-center\\\">\\n      register\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { OnInit } from '@angular/core';\nimport { first } from 'rxjs/operators';\nimport { map } from 'rxjs/operators';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { TestService } from '@services/test.service';\n\n\n\n\n\n\n\n\n//import { LaserCutterService } from '@services/lasercutter.service';\n\n@Component({\n  selector: 'register-root',\n  templateUrl: './register.component.html',\n  providers: [TestService],\n})\n\n\nexport class Register implements OnInit {\n\n  constructor(\n  ) { }\n\n\n  ngOnInit() {\n\n\n\n  }\n\n\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { HttpHeaders } from '@angular/common/http';\n\n\n\n@Injectable()\nexport class TestService  {\n\n\n// _url: string = \"https://security-n-compliance.herokuapp.com\"\n_url: string = \"http://localhost:3000\"\n  constructor(private http: HttpClient) { }\n\n  updateAnswers(_id: String, answer: String): Observable<any>{\n    const headers = new HttpHeaders({'Content-Type': 'Content-Type: application/json'});\n    return this.http.put<any>(this._url+\"/api/demo/\"+_id,{Answer: answer});\n  }\n\n  writePDF(template: any): Observable<any>{\n    const headers = new HttpHeaders({'Content-Type': 'Content-Type: application/json'});\n  return  this.http.post<any>(this._url+\"/api/demo/12345/answerquestion\",template) };\n\n\n    sendPDF(stream: any): Observable<any>{\n      const headers = new HttpHeaders({'Content-Type': 'Content-Type: application/json'});\n  return this.http.post<any>(this._url+\"/api/demo/upload\",stream);\n}\n\ngetKeys(): Observable <any>{\nreturn this.http.get<any>(this._url+'/api/demo/DEMO/getkeys');\n}\n\ngetForm(key: String): Observable<ArrayBuffer>{\n    return this.http.post(this._url+'/api/demo/getform', {Key: key}, { responseType: 'arraybuffer' });\n}\n\n\n\n\n\n\n\n\n\n\n\n\n}\n"],"sourceRoot":""}